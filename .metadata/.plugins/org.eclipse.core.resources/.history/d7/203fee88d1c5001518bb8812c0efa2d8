package ch.ethz.soms.nervous.android.info;

public class BackendImplementation implements Backend {
	
	private Displaying display;
	
	public BackendImplementation(Displaying display) {
		this.display = display;
	}

	@Override
	public void calculateEntropy(int startYear, int startMonth, int startDay,
			int startHour, int startMinute, int endYear, int endMonth,
			int endDay, int endHour, int endMinute) {
		
//		String entropy = startDay + "." + 
//						(startMonth+1) + "." + 
//						startYear + ". " + 
//						startHour + ":" +
//						startMinute + "___" +
//						endDay + "." + 
//						(endMonth+1) + "." + 
//						endYear + ". " +
//						endHour + ":" +
//						endMinute;
						
		String entropy = "89";

		this.display.displayEntropy(entropy);		
	}

	@Override
	public void requestRealTimeEntropy(String period, String frequency) {
		//do some calculations
		display.displayResults(SensorType.ACCELEROMETER, 0, 1, 2, 3, 4);
		display.displayResults(SensorType.BATTERY, 1, 1, 2, 3, 4);
		display.displayResults(SensorType.BLEBEACON, 2, 1, 2, 3, 4);
		display.displayResults(SensorType.CONNECTIVITY, 3, 1, 2, 3, 4);
		display.displayResults(SensorType.GYROSCOPE, 4, 1, 2, 3, 4);
		display.displayResults(SensorType.HUMIDITY, 5, 1, 2, 3, 4);
		display.displayResults(SensorType.LIGHT, 6, 1, 2, 3, 4);
		display.displayResults(SensorType.MAGNETIC, 7, 1, 2, 3, 4);
		display.displayResults(SensorType.NOISE, 8, 1, 2, 3, 4);
		display.displayResults(SensorType.PRESSURE, 9, 1, 2, 3, 4);
		display.displayResults(SensorType.PROXIMITY, 10, 1, 2, 3, 4);
		display.displayResults(SensorType.TEMPERATURE, 11, 1, 2, 3, 4);
	}

}
